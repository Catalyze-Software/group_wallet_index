type Result = variant { Ok : Status; Err : text };
type Result_1 = variant { Ok : principal; Err : text };
type Result_2 = variant { Ok; Err : text };
type Status = record {
  done : opt null;
  canister_spawned : opt principal;
  canister_installed : opt principal;
  transaction_valid : opt Tokens;
  status_type : opt text;
  min_amount_error : opt nat64;
  transferred_to_cmc : opt nat64;
  topped_up_self : opt nat;
};
type Tokens = record { e8s : nat64 };
type WalletData = record {
  updated_at : nat64;
  owner : principal;
  cmc_blockheight : nat64;
  created_at : nat64;
  created_by : principal;
  icp_blockheight : nat64;
};
service : {
  __get_candid_interface_tmp_hack : () -> (text) query;
  get_cycles : () -> (nat64) query;
  get_spawn : (nat64) -> (Result) query;
  get_spawns : () -> (vec record { nat64; Status }) query;
  get_wallets : () -> (vec record { principal; WalletData }) query;
  spawn_wallet : (nat64, vec principal) -> (Result_1);
  top_up_wallet : (nat64, principal) -> (Result_2);
  transfer_ownership : (principal, principal) -> (Result_2);
}