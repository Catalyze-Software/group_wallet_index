type Result = variant { Ok : nat64; Err : text };
type Result_1 = variant { Ok : principal; Err : text };
type Tokens = record { e8s : nat64 };
type TransactionData = record {
  status : TransactionStatus;
  cmc_transfer_block_index : opt nat64;
  cycles_amount : opt nat;
  error_message : opt text;
  initialized_by : principal;
  created_at : nat64;
  icp_transfer_block_index : nat64;
  icp_amount : opt Tokens;
};
type TransactionStatus = variant {
  InsufficientIcp;
  CyclesToIndexFailed;
  Success;
  IcpToCmcFailed;
  IcpToIndexFailed;
  Pending;
};
service : {
  get_caller_local_balance : () -> (nat64) query;
  get_cmc_icp_balance : () -> (Result);
  get_cycles : () -> (nat64) query;
  get_transactions : (opt TransactionStatus) -> (vec TransactionData) query;
  spawn_multisig : (nat64) -> (Result_1);
}